# Space Miner Adventure - 太空矿工冒险

![Space Miner Adventure](https://img.shields.io/badge/Game-Space%20Miner%20Adventure-blue)
![C Language](https://img.shields.io/badge/Language-C-orange)
![License](https://img.shields.io/badge/License-MIT-green)

## 🚀 游戏简介

《太空矿工冒险》是一款基于C语言开发的文字冒险游戏，采用面向对象的设计模式。玩家将扮演一名太空矿工，在银河系中探索不同的星球，采集资源，遭遇外星生物，并努力生存下去。

### 游戏特色

- 🌌 **探索银河系**：访问多个各具特色的星球
- ⛏️ **资源采集**：在星球上采矿获取资源
- 👽 **外星遭遇**：与各种外星生物互动
- 🛸 **飞船管理**：管理燃料、护盾和货物容量
- 💰 **贸易系统**：与其他星球进行资源交易
- 🎮 **简单操作**：基于文本命令的直观操作

## 🛠️ 构建说明

### 环境要求

- GCC 编译器
- Make 构建工具
- Linux/macOS/Windows (WSL) 环境

### 构建步骤

1. 克隆或下载项目文件
2. 在项目根目录运行：
   ```bash
   make
   ```
3. 运行游戏：
   ```bash
   ./space_miner
   ```

### 清理构建

```bash
make clean
```

## 🎯 游戏玩法

### 启动游戏

运行游戏后，你将看到欢迎信息并开始环绕地球轨道。

### 基本命令

| 命令 | 功能描述 |
|------|----------|
| `s` | 飞船状态/星球扫描 |
| `m` | 移动至其他星球/采矿 |
| `e` | 探索/遭遇外星生物 |
| `a` | 攻击遭遇的外星生物 |
| `t` | 与当前星球交易资源 |
| `q` | 退出游戏，返回地球 |
| `h` | 显示帮助信息 |

### 详细操作

#### 飞船状态/扫描 (s)
- 选择 `1`：查看飞船状态（燃料、货物容量、护盾）
- 选择 `2`：扫描当前星球
  - 选择 `0`：快速扫描（显示资源和危险等级）
  - 选择 `1`：详细扫描（显示气候、资源、危险等级和连接星球）

#### 移动/采矿 (m)
- 选择 `1`：移动到其他星球（消耗燃料）
- 选择 `2`：在当前星球采矿（增加货物，减少星球资源）

#### 探索/遭遇 (e)
- 探索当前星球，可能遭遇外星生物
- 高危险等级星球更可能遭遇敌对外星人

#### 攻击 (a)
- 攻击当前遭遇的外星生物
- 成功击败外星人可获得奖励

#### 交易 (t)
- 与当前星球交易资源
- 需要有空余的货物容量

## 🌍 游戏世界

### 可用星球

1. **地球** - 家园基地
   - 气候：温带
   - 资源：1000单位
   - 危险等级：1/10

2. **火星** - 红色星球
   - 气候：干旱
   - 资源：500单位
   - 危险等级：3/10

3. **Xenon Prime** - 外星世界
   - 气候：有毒
   - 资源：800单位
   - 危险等级：8/10

4. **Crystalium** - 资源丰富的星球
   - 气候：水晶
   - 资源：65536单位
   - 危险等级：6/10

### 飞船属性

- **燃料**：初始100%，每次移动消耗10%
- **货物容量**：最大50单位
- **护盾**：初始100%，遭遇攻击时减少

## 🏗️ 技术架构

### 设计模式

游戏采用伪面向对象设计模式，使用结构体和函数指针模拟类和方法的特性。

### 核心组件

- **Object系统**：所有游戏对象的基类
- **原型模式**：使用原型创建新对象实例
- **资源管理**：手动内存管理，确保无内存泄漏

### 文件结构

```
space_miner/
├── src/
│   ├── object.c          # 对象系统实现
│   ├── space_main.c      # 主程序和游戏初始化
│   └── space_miner.c     # 游戏逻辑和对象实现
├── include/
│   ├── object.h          # 对象系统头文件
│   └── space_miner.h     # 游戏头文件
├── Makefile              # 构建配置
└── README.md            # 本文档
```

## 🧪 测试

项目包含完整的测试脚本，验证游戏功能和内存管理：

```bash
# 运行测试套件
./test_space_miner.sh

# 内存泄漏检查
valgrind --leak-check=full ./space_miner
```

## 🐛 故障排除

### 常见问题

1. **编译错误**
   - 确保已安装GCC和Make
   - 检查文件权限

2. **运行时错误**
   - 验证所有文件都在正确位置
   - 确保输入格式正确

3. **内存泄漏**
   - 使用Valgrind检查内存问题
   - 确保正确退出游戏

### 调试技巧

- 启用编译警告：`make DEBUG=1`
- 使用GDB调试：`gdb ./space_miner`
- 检查内存：`valgrind --track-origins=yes ./space_miner`

## 📝 开发说明

### 扩展游戏

要添加新功能，可以：

1. 在 `object.h` 中扩展Object结构体
2. 在 `space_miner.h` 中定义新的对象类型
3. 在 `space_miner.c` 中实现对象行为
4. 在 `space_main.c` 中初始化新对象

### 代码规范

- 使用有意义的变量和函数名
- 添加必要的错误检查
- 确保内存正确分配和释放
- 编写清晰的注释

## 📄 许可证

本项目采用 MIT 许可证。详情请参阅 LICENSE 文件。

## 🤝 贡献

欢迎提交问题报告和功能请求！如果你想要贡献代码：

1. Fork 本项目
2. 创建功能分支
3. 提交更改
4. 推送到分支
5. 创建 Pull Request

## 📞 联系信息

如有问题或建议，请通过以下方式联系：

- 提交 GitHub Issue
- 发送电子邮件至项目维护者

---

**祝你在太空矿工冒险中玩得愉快！** 🌟
